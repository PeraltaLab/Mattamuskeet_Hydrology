val = Rain[i]
print(i)
print(val)
print('previous val: ' + str(val))
# now you have an index
}
#for (i in length(Rain)){
for (i in 1:4){
val = Rain[i]
print(i)
print(val)
print(cat('previous val: ',str(val))
# now you have an index
}
#for (i in length(Rain)){
for (i in 1:4){
val = Rain[i]
print(i)
print(val)
print(cat('previous val: ', val)
}
#for (i in length(Rain)){
for (i in 1:4){
val = Rain[i]
print(i)
print(val)
}
#for (i in length(Rain)){
for (i in Rain){
val = Rain[i]
print(i)
print(val)
}
#for (i in length(Rain)){
for (i in Rain){
val = Rain[i]
print(i)
#  print(val)
}
#for (i in length(Rain)){
for (i in 1:length(Rain){
val = Rain[i]
print(i)
#  print(val)
}
#for (i in length(Rain)){
for (i in 1:length(Rain)){
val = Rain[i]
print(i)
#  print(val)
}
#for (i in length(Rain)){
for (i in 1:length(Rain)){
val = Rain[i]
print(i)
print(val)
}
#for (i in length(Rain)){
for (i in 1:length(Rain)){
val = Rain[i]
print(i)
print(val)
print(Rain[i-1])
}
for (i in 1:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
print(Rain[i-1])
}
for (i in 1:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
Shiiitt=Rain[i-1]
}
Shiiitt=0
for (i in 1:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
Shiiitt=c(Shiiitt,Rain[i-1])
}
#for (i in length(Rain)){
for (i in 1:length(Rain)){
val = Rain[i]
print(i)
print(val)
}
for (i in 1:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
#Shiiitt=c(Shiiitt,Rain[i-1])
if (val > Rain[i-1]) {
Rain2$start = "y"
} else Rain2$start = "n"
}
#for (i in length(Rain)){
for (i in 1:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
#Shiiitt=c(Shiiitt,Rain[i-1])
if (val > Rain[i-1]) {
Rain2$start = "y"
} else next
}
for (i in 2:length(Rain)){
val = Rain[i]
#print(i)
#print(val)
if (val > Rain[i-1]) {
Rain2$start = "y"
}
}
View(Rain2)
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain2$start[i] = "y"
}
}
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = "y"
}
}
Rain3 =c()
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = "y"
}
}
data.frame(Rain3)
Rain3=data.frame(Rain3)
View(Rain3)
Rain3 =c()
#for (i in length(Rain)){
for (i in 1:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = "y"
}
}
Rain3 =c()
#for (i in length(Rain)){
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = "y"
}
}
Rain3=data.frame(Rain3)
View(Rain3)
Rain3 =c()
#for (i in length(Rain)){
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = 1
} else Rain3[i] = 0
}
Rain3=data.frame(Rain3)
View(Rain3)
Rain2$start = Rain3
rain = read.csv("MI9_rain_brewer.csv")
rain = na.omit(rain)
rain = read.csv("MI9_rain_brewer.csv")
rain = na.omit(rain)
Rain = rain[ ,2]
Rain2=Rain
Rain2 = data.frame(Rain2)
Rain3 =c()
#for (i in length(Rain)){
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = 1
} else Rain3[i] = 0
}
Rain3=data.frame(Rain3)
Rain2$start = Rain3
storm_log= data.frame(c())
storm_log= data.frame(c())
for (i in Rain2$start) {
if (i = 1) {
storm_log = cbind(storm_log, Rain2$Rain2[i:i+95])
}
}
View(storm_log)
storm_log= c()
for (i in Rain2$start) {
if (i == 1) {
storm_log = cbind(storm_log, Rain2$Rain2[i:i+95])
}
}
View(Rain2)
Rain2$start[1] ==0
Rain2$start[1] = 0
View(Rain2)
Rain3 =c()
#for (i in length(Rain)){
for (i in 2:length(Rain)){
#print(i)
#print(val)
val = Rain[i]
if (val > Rain[i-1]) {
Rain3[i] = 1
} else Rain3[i] = 0
}
Rain3=data.frame(Rain3)
Rain2$start = Rain3
Rain2$start[1] == 0
Rain2$start[Rain2$start[1]] = 0
View(Rain2)
Rain2$start[Rain2$start==NA] <- 0
Rain2$start[is.na(Rain2$start)] <- 0
storm_log= c()
for (i in Rain2$start) {
if (i == 1) {
storm_log = cbind(storm_log, Rain2$Rain2[i:i+95])
}
}
for (i in Rain2$start) {
val_1= Rain2$start[i]
if (Val_1 == 1) {
storm_event = Rain2$Rain2[i:i+95]
storm_log = cbind(storm_log, storm_event)
}
}
storm_log= c()
for (i in Rain2$start) {
val_1= Rain2$start[i]
if (val_1 == 1) {
storm_event = Rain2$Rain2[i:i+95]
storm_log = cbind(storm_log, storm_event)
}
}
indicator = Rain2$start
View(indicator)
View(val_1)
for (i in indicator) {
val_1= indicator[i]
if (val_1 == 1) {
storm_event = Rain2$Rain2[i:i+95]
storm_log = cbind(storm_log, storm_event)
} else storm_event =c()
}
storm_log= c()
for (i in indicator) {
val_1= indicator[i]
if (val_1 = 1) {
storm_event = c(i:i+95)
storm_log = cbind(storm_log, storm_event)
} else storm_event =c()
}
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 = 1) {
storm_event = c(i:i+95)
storm_log = cbind(storm_log, storm_event)
} else storm_event =c()
}
storm_log= c()
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 = 1) {
storm_event = c(i:i+95)
} else storm_event =c()
}
storm_event =c()
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 = 1) {
storm_event = c(i:i+95)
}
}
View(Rain2)
Val_1=()
Val_1=c()
for (i in 1:length(Rain2$start)) {
val_1= indicator[i]
if (val_1 == 1) {
} print("fuckoff")
}
for (i in 1:length(Rain2$start)) {
val_1= indicator[i]
if (val_1 == 1) {
print("fuckoff")
}
}
Rain2$start[3]
Rain2$start[[3]]
indicator[3]
indicator = as.vector(indicator)
View(indicator)
indicator[3]
indicator[[3]]
indicator = as.slice(indicator)
indicator = as.numeric(indicator)
indicator = as.numeric(indicator$Rain3)
indicator[3]
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 == 1) {
print("fuckoff")
}
}
storm_index=c()
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 == 1) {
storm_index = c(i:(i+95))
}
}
storm=c()
storm_index=c()
for (i in 1:length(indicator)) {
val_1= indicator[i]
if (val_1 == 1) {
storm = c(i:(i+95))
}
storm_index = cbind(storm_index, storm)
}
View(storm_index)
storm_index=data.frame(storm_index)
storm_index$storm.1999
View(Rain2)
View(Rain3)
storm_index$2500
storm_index$storm.2050
storm_index$storm.20888
unlist(storm_index[,c(1:36552)])
long_list =unlist(storm_index[,c(1:36552)])
long_list =unlist(storm_index[,c(1:36552)])
long_list
long_list=as.numeric(long_list)
long_list=as.matrix(long_list)
View(long_list)
summary(long_list)
long_list[!duplicated(long_list[,1]),]
long_list = long_list[!duplicated(long_list[,1]),]
long_list = as.matrix(long_list)
View(long_list)
long_list2= long_list
?unsplit
12855/96
12856/96
12858/96
12855/95
12862/96
12866/96
12864/96
long_list3 = unsplit(long_list2, 96)
chunk <- 96
n <- nrow(long_list2)
r  <- rep(1:ceiling(n/chunk),each=chunk)[1:n]
d <- split(long_list2,r)
d = as.matrix(d)
View(d)
d[134]
View(Rain3)
View(Rain2)
long_list2[2]
for (i in 1:length(long_list)) {
long_list2[i] = Rain[i]
}
View(rain)
?replace
rain = na.omit(rain)
Rain = rain[ ,2]
Rain2=Rain
Rain2 = data.frame(Rain2)
View(long_list)
long_list2 = long_list
replace(long_list2, long_list2, Rain)
long_list3= replace(long_list2, long_list2, Rain)
Rain[1]
Rain_storms = (Rain[1:length(long_list2)])
Rain_storms
Rain_storms = (Rain[long_list2])
Rain_storms
Rain_storms2 = Rain_storms
chunk <- 96
n <- nrow(Rain_storms2)
r  <- rep(1:ceiling(n/chunk),each=chunk)[1:n]
d <- split(Rain_storms2,r)
Finished = as.matrix(d)
n <- nrow(Rain_storms2)
Rain_storms2 = as.data.frame(Rain_storms2)
View(Rain_storms2)
chunk <- 96
n <- nrow(Rain_storms2)
r  <- rep(1:ceiling(n/chunk),each=chunk)[1:n]
d <- split(Rain_storms2,r)
Finished = as.matrix(d)
View(Finished)
max(Finished[130])
Finished2 = Finished
Finished2 = as.data.frame(Finished2)
View(Finished2)
summary(Finished2)
write.csv(Finished2, "Raw_storm_output.csv")
View(Rain_storms2)
View(Finished2)
Finished2$V1$`1`
Finished2$V1$`134`
Finished2$V1$123
Finished2$V1$`12`
View(Finished)
View(Finished2)
Finished2$V1$`1`
storm_1=Finished2$V1$`1`
View(storm_1)
storm_1=(Finished2$V1$`1`:Finished2$V1$`134`)
View(Finished2)
as.matrix(Finished2)
View(Rain_storms2)
Rain_storms3 <- as.data.frame(matrix(Rain_storms2[,1], byrow=TRUE, ncol = 134))
View(Rain_storms3)
Rain_storms2 = t(Rain_storms2)
Rain_storms4 <- as.data.frame(matrix(Rain_storms2[,1], byrow=TRUE, ncol = 134))
View(Rain_storms4)
Rain_storms2 = t(Rain_storms2)
View(Rain_storms2)
for (i in 1:length(Rain_storms2)) {
val = Rain_storms2[i]
col_1 = Rain_storms2[i:i+95]
Event_database = cbind(Event_database, col_1)
i = i+95
}
Event_database= c()
for (i in 1:length(Rain_storms2)) {
val = Rain_storms2[i]
col_1 = Rain_storms2[i:i+95]
Event_database = cbind(Event_database, col_1)
i = i+95
}
View(Event_database)
Event_database= c()
for (i in 1:length(Rain_storms2)) {
val = Rain_storms2[i]
col_1 = c(Rain_storms2[i:i+95])
Event_database = cbind(Event_database, col_1)
i = i+95
}
View(Event_database)
Rain_events = as.data.frame(matrix(Rain_storms2, ncol = 134,  byrow = F))
View(Event_database)
View(Rain_events)
write.csv(Rain_events, "Ordered_storm_events.csv")
max(rain)
rain(max)
print(rain[36618])
View(rain)
post_rainfall = read.csv("storm_event_24hr_postrainfall_sum.csv")
View(post_rainfall)
storm_event_final = post_rainfall[post_rainfall >=.5]
post_rainfall = post_rainfall[post_rainfall >=.5]
post_rainfall = data.frame(post_rainfall)
View(post_rainfall)
View(Rain_events)
View(rain)
?match
match(Rain_events$V1, rain$Cumulative.rain)
match(rain$Cumulative.rain, Rain_events$V1)
?join
post_rainfall = read.csv("storm_event_24hr_postrainfall_sum.csv")
View(post_rainfall)
post_rainfall = t(post_rainfall)
View(post_rainfall)
post_rainfall_FINAL = post_rainfall[post_rainfall >=.5]
post_rainfall_FINAL = post_rainfall[post_rainfall <=.5] <- NA
post_rainfall = data.frame(post_rainfall)
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall <=.5] <- NA
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall =<.5] <- NA
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall <.51]
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall <.51, ] <- NA
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall >.49 ]
post_rainfall_FINAL = post_rainfall[post_rainfall$post_rainfall >.49, ]
post_rainfall_FINAL = data.frame(post_rainfall_FINAL)
View(post_rainfall_FINAL)
setwd("Thesis Project (Final)/Biogeochemical Assays/Denitrification/January/")
X = read.csv("December PPM, cleaned.csv")
View(X)
X = X[ , c(1, 3)]
X = read.csv("December PPM, cleaned.csv", header = T)
View(X)
X = read.csv("December PPM, cleaned.csv", header = F)
X = X[ , c(1, 3)]
X = t(X)
View(X)
X = data.frame(X)
View(X)
write.csv(X, "transposed_PPM.csv")
