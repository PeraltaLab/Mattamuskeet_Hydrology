p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Water Level (m)"))
p
p <- p + geom_line(aes(y = WL/100, colour = "water level"))
# now adding the secondary axis, following the example in the help file scale_y_continuous
# and, very important, reverting the above transformation
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*100, name = "Water Level (m)"))
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = TDN_1, colour = "TDN"))
p <- p + geom_line(aes(y = WL/100, colour = "water level"))
# now adding the secondary axis, following the example in the help file scale_y_continuous
# and, very important, reverting the above transformation
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*100, name = "Water Level (m)"))
p
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = TDN_1, colour = "TDN"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
# now adding the secondary axis, following the example in the help file scale_y_continuous
# and, very important, reverting the above transformation
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.01, name = "Water Level (m)"))
p
p <- p + geom_line(aes(y = DON, colour = "DON"))
p
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = TDN_1, colour = "TDN"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = DON, colour = "DON"))
p
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"), name = "N Parameter (mg/L)")
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("red", "blue", "black", "green"))
p
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "Air temperature [Â°C]",
x = "Date and time",
colour = "Parameter")
p
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("blue", "red"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme(legend.position = "top")
p
p <- + theme_bw()
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "darkgreen", "red", "blue"))
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=30, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=15, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=45, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, angle=45, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.1, angle=45, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.5, hjust=0.5, angle=45, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.75, hjust=0.5, angle=45, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.75, hjust=0.5, angle=40, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.75, hjust=0.5, angle=30, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.85, hjust=0.5, angle=30, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.95, hjust=0.5, angle=30, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=30, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
# load data file
wq <- read.csv("../data/Matt_Ag_storm.csv")
dim(wq)
date.time <- strptime(wq$Storm_1, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "darkgreen", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme(legend.position = "top")
p <- p + theme_bw()
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
date.time <- strptime(wq$Storm_1, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "darkgreen", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=10), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
date.time <- strptime(wq$Storm_1, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("dplyr")
require("reshape2")
require("ggplot2")
require("knitr")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
wq <- read.csv("../data/Matt_Ag_storm.csv")
dim(wq)
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
date.time.hobo <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
date.time.nut <- strptime(wq$Nut_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time.nut, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
# load data file
wq <- read.csv("../data/Matt_Ag_storm.csv")
dim(wq)
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
date.time.nut <- strptime(wq$Nut_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time.nut, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
date.time.nut <- strptime(wq$NUT_DATE.TIME, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time.nut, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
#ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
date.time.nut <- strptime(wq$NUT_DATE.TIME, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time.nut, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
p <- p + theme_bw() + theme(legend.position = "top")
p
date.time.nut <- strptime(wq$NUT_DATE.TIME, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time.nut))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
rm(list = ls())
#load req'd packages
require("dplyr")
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("dplyr")
require("reshape2")
require("ggplot2")
require("knitr")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
wq <- read.csv("../data/Matt_Ag_storm.csv")
date.time <- strptime(wq$Storm_1_date, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
date.time <- strptime(wq$Storm_1, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time <- date.time
str(wq)
date.time.nut <- strptime(wq$NUT_DATE.TIME, format = "%m/%d/%y  %H:%M", tz = "America/New_York")
wq$date.time.nut <- date.time.nut
str(wq)
p <- ggplot(wq, aes(x = date.time.nut))
p <- p + geom_line(aes(y = DON, colour = "organic N"))
p <- p + geom_line(aes(y = NH4_1, colour = "ammonium-N"))
p <- p + geom_line(aes(y = NO3_1, colour = "nitrate-N"))
p <- p + geom_line(aes(x = date.time, y = WL*10, colour = "water level"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*0.1, name = "Water Level (m)"))
# modifying colours and theme options
p <- p + scale_colour_manual(values = c("black", "green", "red", "blue"))
p <- p + labs(y = "N Parameter (mg/L)",
x = "Date and time",
colour = "Parameter")
p <- p + theme_bw() + theme(legend.position = "top")
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.90, hjust=0.5, angle=25, size=12), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p
ggsave("../figures/AgStormExample.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
rm(list=ls())
setwd("~/GitHub/ECU-BGC-ME_2017")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
require("reshape")
require("ggplot2")
data1 <- read.csv("../data/2017_BGE_ME_expt_DATA.csv", header=TRUE)
str(data1)
#NOTE: all parametric tests were run without testing for assumptions to simplify
#code for the class - so the 'proper' way to run these stats is to test for
#normality and homogeneity of variances or modeling fitting approaches
p <- ggplot(data1, aes(x = Biochar, y = Cmin, group = interaction(Plant, Microbe), fill = Microbe))
p <- ggplot(data1, aes(x = Biochar, y = Cmin, group = interaction(Plant, Microbe), fill = Microbe)) + geom_boxplot()
p
p <- ggplot(data1, aes(x = Biochar, y = Cmin, group = interaction(Plant, Microbe), fill = group)) + geom_boxplot()
p
p <- ggplot(data1, aes(x = as.factor(data1$Biochar), y = Cmin, fill = Microbe))
p <- ggplot(data1, aes(x = as.factor(data1$Biochar), y = Cmin, fill = Microbe)) + geom_boxplot()
p
p <- ggplot(data1, aes(x = as.factor(data1$Biochar), y = Cmin, fill = Microbe))
p <- p + geom_boxplot()
p
rm(list=ls())
setwd("~/GitHub/ECU-BGC-ME_2017")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
require("reshape")
require("ggplot2")
data1 <- read.csv("../data/2017_BGE_ME_expt_DATA.csv", header=TRUE)
str(data1)
#NOTE: all parametric tests were run without testing for assumptions to simplify
#code for the class - so the 'proper' way to run these stats is to test for
#normality and homogeneity of variances or modeling fitting approaches
#graphing C mineralization boxplots
library(dplyr)
p <- ggplot(data1, aes(x = Biochar, y = Cmin, fill = Microbe))
p <- p + geom_boxplot()
p
p <- ggplot(data1, aes(Biochar, Cmin))
p <- p + geom_boxplot()
p
p <- ggplot(data1, aes(Plant, Cmin))
p <- p + geom_boxplot()
p
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master)
#Mean center all continuous variables
#master$Moisture = master$Moisture- mean(master$Moisture)
#master$ugNH4.gDM = master$ugNH4.gDM- mean(master$ugNH4.gDM)
#master$ugNO3.gDM = master$ugNO3.gDM- mean(master$ugNO3.gDM)
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/nitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=denitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Denitrification Potential (ng N"[2],"O (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/denitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=Nmineralization, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (", mu,'g ',NH[4]^{'+'},' - N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/Nmineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential /n(ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential \n(ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/nitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=denitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Denitrification Potential (ng N"[2],"O (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Denitrification Potential (ng N"[2],"O (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/nitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=denitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Denitrification Potential (ng N"[2],"O (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/denitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=Nmineralization, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (", mu,'g ',NH[4]^{'+'},' - N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (", mu,'g ',NH[4]^{'+'},' - N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=14), axis.text=element_text(size=14), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (", mu,'g ',NH[4]^{'+'},'-N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/Nmineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=Nmineralization, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=18), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=18), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (", mu,'g ',NH[4]^{'+'},'-N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/Nmineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=denitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=18), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Denitrification Potential (ng N"[2],"O (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/denitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=Moisture, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=18), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/nitrification.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(master, aes(x=pH, y=nitrification, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Agriculture", "Impoundment")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))
p1=p+geom_smooth(method="lm")
p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=18), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Soil pH", y = (expression(paste("Nitrification Potential (ng NO"[2]," (g DM)"^-{1}," hr"^-{1},")")))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
str(master)
p <- ggplot(meso, aes(x=Sample.Date, y=TKN, color=as.factor(Treatment), shape=as.factor(Ret_Time)))+ scale_color_manual(name="Treatment", values=c("lightgray","black")) + scale_shape_manual(name="Retention Time", values=c(15,17)) + stat_summary(fun.data=mean_cl_boot,size=1.25,position=position_dodge(width=0.5)) +facet_wrap(~Site)
meso <- read.csv("../data/2017_Matt_Mesocosm_Nitrogen.csv")
p <- ggplot(meso, aes(x=Sample.Date, y=TKN, color=as.factor(Treatment), shape=as.factor(Ret_Time)))+ scale_color_manual(name="Treatment", values=c("lightgray","black")) + scale_shape_manual(name="Retention Time", values=c(15,17)) + stat_summary(fun.data=mean_cl_boot,size=1.25,position=position_dodge(width=0.5)) +facet_wrap(~Site)
TKN <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(hjust=0.8, angle=45, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "", y = "Organic N") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/meso_ON.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(meso, aes(x=Sample.Date, y=NH3N, color=as.factor(Treatment), shape=as.factor(Ret_Time)))+ scale_color_manual(name="Treatment", values=c("lightgray","black")) + scale_shape_manual(name="Retention Time", values=c(15,17)) + stat_summary(fun.data=mean_cl_boot,size=1.25,position=position_dodge(width=0.5)) +facet_wrap(~Site)
ammonium <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(hjust=0.8, angle=45, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "", y = "Ammonium-N") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/meso_ammonium.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
p <- ggplot(meso, aes(x=Sample.Date, y=NO3N, color=as.factor(Treatment), shape=as.factor(Ret_Time)))+ scale_color_manual(name="Treatment", values=c("lightgray","black")) + scale_shape_manual(name="Retention Time", values=c(15,17)) + stat_summary(fun.data=mean_cl_boot,size=1.25,position=position_dodge(width=0.5)) +facet_wrap(~Site)
nitrate <- p + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=16,face="bold"), axis.text=element_text(size=14), axis.text.x = element_text(hjust=0.8, angle=45, size=14), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Month", y = "Nitrate-N") + theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=16, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/meso_nitrate.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=NA, height=NA, dpi=300, limitsize=TRUE)
