theme(axis.title = element_text(size=14), axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (39.2%)") + ylab("PCoA 2 (16.1%)") +
labs(colour = "treatment", shape = "source") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4)))+ggtitle("Carbon Use Composition")
ggsave("../figures/WRC18_Rhizo/Ordination_ecoplate.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=5, height=3, dpi=300, limitsize=TRUE)
nitro <- biolog_master[(biolog_master$plate_type %in% "PM3B"),]
#subset to include only T04
nitro_T <- nitro %>%
filter(timepoint=="T04") %>%
filter(sample != "201-M-EC-2")
#Subset design file
biolog_design <- biolog_design %>%
filter(sample != "201-M-EC-2")
#2 reps (A&B) per sample. Each plate is a rep.
#for each plate in nitro_T, calculate adjusted abs for each substance
#Each plate/rep has its own negative control (water)
#then combine reps
nitro_rep1 <- nitro_T %>%
filter(Substance != "negative control")
#get water value to substract from all other substances
nitro_rep1_water <- nitro_T %>%
filter(Substance == "negative control") %>%
group_by(sample, plate_num, Substance, rep)
#Timepoint T04, All substances except water in rep1 (ie wells 1-4 and rows a-h) joined with water value
nitro_rep1_join <- nitro_rep1 %>% left_join(nitro_rep1_water, by=c("sample", "rep"))
#Coalesce and then add adjusted abs column  - adj. abs
nitro_joined_adj <- nitro_rep1_join %>%
mutate(adj_abs = abs.x-abs.y)
#Combine reps#####
#Need to add a design file...
nitro_joined_adj <- nitro_joined_adj %>% left_join(biolog_design, by=c("sample"))
#Transform so that substances are columns and sample is row?
#First select just the columns needed... then turn negatve values into 0
nitro_joined_adj_sub <- nitro_joined_adj %>%
select(Substance.x, sample,  adj_abs ) %>%
mutate(adj_abs = ifelse(adj_abs < 0, 0, adj_abs)) #%>%
#I want Substance.x to be columns and sample to be rows and vales to be adj_abs
m <- melt(nitro_joined_adj_sub)
c<-cast(data=m, formula = sample ~ Substance.x,fun.aggregate = sum)
nitro.dist <- vegdist(c, method = "euclidean")
# Principal Coordinates Analysis
dataREL.dist <- nitro.dist
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #39.2
explainvar2b #16.1
# Principal Coordinates Analysis - bulk and teas
new.data <-cbind(biolog_design,c)
pcoa.groups <- paste(new.data$treatment, new.data$source, new.data$ditch, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
trt.c <- c("M","M","M","MF","MF","MF")
source.c <- c("bulk soil","forb","grass","bulk soil","forb","grass")
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts$trt <- as.factor(trt.c)
pcoa.cent.dataframe.trts$source <- as.factor(source.c)
#Plot
df1a <- as.data.frame(pcoa.cent.dataframe.trts)
plot1a <- ggplot(df1a, aes(x=V1, y=V2, colour=trt, shape = source,
group = interaction(trt, source))) + theme_bw()
#Plot
df2a <- as.data.frame(pcoa.cent.dataframe.trts)
plot2a <- ggplot(df2a, aes(x=V1, y=V2, colour=trt, shape = source,
group = interaction(trt, source))) + theme_bw()
plot2a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") + geom_point(aes(colour=trt.c), size=5, stroke = 1.25, show.legend = TRUE) +
scale_colour_manual(labels = c("mowed","mowed/fertilized"),
values = c("darkgray", "darkgreen")) +
scale_shape_manual(labels = c("bulk soil",
"forb",
"grass"),
values = c(16,22,15)) +
theme(axis.title = element_text(size=14), axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (50.3%)") + ylab("PCoA 2 (7.5%)") +
labs(colour = "treatment", shape = "source") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4)))+ggtitle("Nitrogen Use Composition")
ggsave("../figures/WRC18_Rhizo/Ordination_nitroplate.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=5, height=3, dpi=300, limitsize=TRUE)
o4 <- biolog_master[(biolog_master$plate_type %in% "PM4A"),]
#subset to include only T04
po4_T <- po4 %>%
filter(timepoint=="T04") %>%
filter(sample != "201-M-EC-2")
#For each treatment*source get count of group (group is the category of substrate)
#Presence absence; set a threshold positive value
#Left join substrate group to biolog results to add group to each substrate?
biolog_sub_groups <- read.csv("../data/WRC18_Rhizo/biolog_substrate_groups.csv")
biolog_sub_groups <- biolog_sub_groups %>%
filter(plate_type=="PM4A")
po4_joined_adj_sub <- po4_joined_adj_sub %>%
#rename(Substance = Substance.x) %>%
left_join(biolog_sub_groups, by="Substance") %>%
mutate(PA = ifelse(adj_abs < 0.5, 0, 1) )
#Transform so that substances are columns and sample is row?
#First select just the columns needed... then turn negatve values into 0
po4_joined_adj_sub <- po4_joined_adj %>%
select(Substance.x, sample,  adj_abs ) %>%
mutate(adj_abs = ifelse(adj_abs < 0, 0, adj_abs)) #%>%
#Subset master biolog file to include only nitro plates
po4 <- biolog_master[(biolog_master$plate_type %in% "PM4A"),]
#subset to include only T04
po4_T <- po4 %>%
filter(timepoint=="T04") %>%
filter(sample != "201-M-EC-2")
#Subset design file
biolog_design <- biolog_design %>%
filter(sample != "201-M-EC-2")
#po4 A1-E12
po4_rep1 <- po4_T %>%
filter(Substance != "negative control") %>%
filter(Well %in% c(1:12) & Row %in% c("A","B","C","D","E"))
#sulfur F1-H12
sulfur_rep1 <- po4_T %>%
filter(Substance != "negative control") %>%
filter(Well %in% c(1:12),Row %in% c("F","G","H"))
#get water value to substract from all other substances
po4_rep1_water <- po4_T %>%
filter(Substance == "negative control",Row ==c("A")) %>%
group_by(sample, plate_num, Substance, rep )
sulfur_rep1_water <- po4_T %>%
filter(Substance == "negative control",Row ==c("F")) %>%
group_by(sample, plate_num, Substance, rep)
#Timepoint T04, All substances except water in rep1 (ie wells 1-4 and rows a-h) joined with water value
po4_joined <- po4_rep1 %>% left_join(po4_rep1_water, by=c("sample"))
sulfur_joined <- sulfur_rep1 %>% left_join(sulfur_rep1_water, by=c("sample"))
#add adjusted abs column  - adj. abs
po4_joined_adj <- po4_joined %>%
mutate(adj_abs = abs.x-abs.y)
sulfur_joined_adj <- sulfur_joined %>%
mutate(adj_abs = abs.x-abs.y)
#Need to add a design file...
po4_joined_adj <- po4_joined_adj %>% left_join(biolog_design, by=c("sample"))
sulfur_joined_adj <- sulfur_joined_adj %>% left_join(biolog_design, by=c("sample"))
po4_subs <- ggplot(po4_joined_adj, aes(treatment, Substance.x)) +
geom_tile(aes(fill = scale(adj_abs)), colour = "white") +
scale_fill_gradient(low = "white", high = "purple") +
facet_grid(~ source)
po4_subs
sulfur_subs <- ggplot(sulfur_joined_adj, aes(treatment, Substance.x)) +
geom_tile(aes(fill = scale(adj_abs)), colour = "white") +
scale_fill_gradient(low = "white", high = "purple") +
facet_grid(~ source)
sulfur_subs
#Transform so that substances are columns and sample is row?
#First select just the columns needed... then turn negatve values into 0
po4_joined_adj_sub <- po4_joined_adj %>%
select(Substance.x, sample,  adj_abs ) %>%
mutate(adj_abs = ifelse(adj_abs < 0, 0, adj_abs)) #%>%
#I want Substance.x to be columns and sample to be rows and vales to be adj_abs
m <- melt(po4_joined_adj_sub)
c<-cast(data=m, formula = sample ~ Substance.x,fun.aggregate = sum)
#biolog_design is design file
#make sure to run PM3 ecodist before proceeding
phos.dist <- vegdist(c, method = "euclidean")
# Principal Coordinates Analysis
dataREL.dist <- phos.dist
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #50.3
explainvar2b #7.5
# Principal Coordinates Analysis - bulk and teas
new.data <-cbind(biolog_design,c)
pcoa.groups <- paste(new.data$treatment, new.data$source, new.data$ditch, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
trt.c <- c("M","M","M","MF","MF","MF")
source.c <- c("bulk soil","forb","grass","bulk soil","forb","grass")
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts$trt <- as.factor(trt.c)
pcoa.cent.dataframe.trts$source <- as.factor(source.c)
#Plot
df3a <- as.data.frame(pcoa.cent.dataframe.trts)
plot3a <- ggplot(df3a, aes(x=V1, y=V2, colour=trt, shape = source,
group = interaction(trt, source))) + theme_bw()
plot3a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") + geom_point(aes(colour=trt.c), size=5, stroke = 1.25, show.legend = TRUE) +
scale_colour_manual(labels = c("mowed","mowed/fertilized"),
values = c("darkgray", "darkgreen")) +
scale_shape_manual(labels = c("bulk soil",
"forb",
"grass"),
values = c(16,22,15)) +
theme(axis.title = element_text(size=14), axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (51.3%)") + ylab("PCoA 2 (10.4%)") +
labs(colour = "treatment", shape = "source") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4)))+ggtitle("Phosphorus Use Composition")
ggsave("../figures/WRC18_Rhizo/Ordination_PM3plate.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=5, height=3, dpi=300, limitsize=TRUE)
#SULFUR
#Transform so that substances are columns and sample is row?
#First select just the columns needed... then turn negatve values into 0
sulfur_joined_adj_sub <- sulfur_joined_adj %>%
select(Substance.x, sample,  adj_abs ) %>%
mutate(adj_abs = ifelse(adj_abs < 0, 0, adj_abs)) #%>%
#I want Substance.x to be columns and sample to be rows and vales to be adj_abs
m <- melt(sulfur_joined_adj_sub)
c<-cast(data=m, formula = sample ~ Substance.x,fun.aggregate = sum)
#biolog_design is design file
#make sure to run PM3 ecodist before proceeding
sulfur.dist <- vegdist(c, method = "euclidean")
# Principal Coordinates Analysis
dataREL.dist <- sulfur.dist
pcoa <- cmdscale(dataREL.dist, k=3, eig=TRUE, add=FALSE)
explainvar1b <- round(pcoa$eig[1] / sum(pcoa$eig), 3) * 100
explainvar2b <- round(pcoa$eig[2] / sum(pcoa$eig), 3) * 100
sum.eigb <- sum(explainvar1b, explainvar2b)
explainvar1b #51.3
explainvar1b #46.7
explainvar2b #10.4
# Principal Coordinates Analysis - bulk and teas
new.data <-cbind(biolog_design,c)
pcoa.groups <- paste(new.data$treatment, new.data$source, new.data$ditch, sep = "_")
pcoa.points <- data.frame(pcoa$points, group = pcoa.groups)
# Calculate Centroids (mean and SE)
pcoa.L.centroids <- melt(pcoa.points, id="group", measure.vars = c("X1", "X2"))
pcoa.centroids <- acast(pcoa.L.centroids, variable ~ group, mean)
pcoa.centroids.se <- acast(pcoa.L.centroids, variable ~ group, se)
pcoa.centroids.sd <- acast(pcoa.L.centroids, variable ~ group, sd)
# Combine
pcoa.cent.dataframe <- cbind(t(pcoa.centroids), t(pcoa.centroids.se))
colnames(pcoa.cent.dataframe) <- c("V1", "V2", "V1e", "V2e")
pcoa.cent.treats <- rownames(pcoa.cent.dataframe)
trt.c <- c("M","M","M","MF","MF","MF")
source.c <- c("bulk soil","forb","grass","bulk soil","forb","grass")
pcoa.cent.dataframe.trts <- as.data.frame(pcoa.cent.dataframe)
pcoa.cent.dataframe.trts$trt <- as.factor(trt.c)
pcoa.cent.dataframe.trts$source <- as.factor(source.c)
#Plot
df4a <- as.data.frame(pcoa.cent.dataframe.trts)
plot4a <- ggplot(df4a, aes(x=V1, y=V2, colour=trt, shape = source,
group = interaction(trt, source))) + theme_bw()
plot4a + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
theme(panel.background = element_blank()) +
geom_errorbarh(aes(xmax=V1+V1e, xmin=V1-V1e, height=0.01), colour="black") + geom_errorbar(aes(ymax=V2+V2e, ymin=V2-V2e, width=0.01), colour="black") + geom_point(aes(colour=trt.c), size=5, stroke = 1.25, show.legend = TRUE) +
scale_colour_manual(labels = c("mowed","mowed/fertilized"),
values = c("darkgray", "darkgreen")) +
scale_shape_manual(labels = c("bulk soil",
"forb",
"grass"),
values = c(16,22,15)) +
theme(axis.title = element_text(size=14), axis.text = element_text(size=14),
axis.text.x = element_text(size=14),
panel.border = element_rect(colour = "black", size = 1.25)) +
theme(axis.ticks.length = unit(0.3, "cm")) +
xlab("PCoA 1 (46.7%)") + ylab("PCoA 2 (10.6%)") +
labs(colour = "treatment", shape = "source") +
guides(colour = guide_legend(override.aes = list(pch=16, size = 4)),
shape = guide_legend(override.aes = list(size = 4)))+ggtitle("Sulfur Use Composition")
ggsave("../figures/WRC18_Rhizo/Ordination_sulfurplate.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=5, height=3, dpi=300, limitsize=TRUE)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
opar <- par(no.readonly = TRUE)  # Saves plot defaults
# Add Summary Functions
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
library(MASS)
library(nlme)
library(reshape2)
library(vegan)
library(reshape)
library(lme4)
library(ggplot2)
require("png")
require("grid")
PCC <- read.csv("../data/WRC_Importance.csv", header=TRUE)
labels(PCC)
treatments <- PCC$treatment
levels(treatments) <- c("UM/UF", "UM/F", "M/UF", "M/F")
PCC.trts <- cbind(treatments,PCC)
PCC$Fertilizer <- factor(PCC$Fertilizer)
PCC$Mowing <- factor(PCC$Mowing)
PCC$Ditch <- factor (PCC$Ditch)
str(PCC)
#incorporated strata to restrict permutation within similar treatment
PCC.dist <- vegdist(PCC[,-c(1:9)], method="bray")
adonis1 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*Ditch+(1|Ditch/BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis2 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+Ditch+(1|Ditch/BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis2
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*BLOCK+Ditch+(1|QUADRAT..), strata=method = "bray", data = PCC, perm=1000)
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*BLOCK+Ditch+(1|QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis3
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*BLOCK+Ditch+(1|BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis3
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*+Ditch+(1|Ditc/BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*+Ditch+(1|Ditch/BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*+Ditch+(1|BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
adonis3
adonis3 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year*+Ditch+(1|BLOCK/QUADRAT..), strata=Year, method = "bray", data = PCC, perm=1000)
adonis2 = adonis(PCC[,-c(1:9)] ~ Fertilizer*Mowing*Year+Ditch+(1|Ditch/BLOCK/QUADRAT..), method = "bray", data = PCC, perm=1000)
rm(list=ls())
setwd("~/GitHub/WRC_FertMowing/analyses")
# Code Dependencies
library(ggplot2)
library(glmmTMB)
library(bbmle)
library(broom.mixed)
library(car)
library(effects)
library(aods3)
library(gridExtra)
WRC_dat.2 <- read.csv("../data/WRC_Plant_Diversity.csv")
head(WRC_dat.2)
WRC_dat.2$Ditch=as.factor(WRC_dat.2$Ditch)
WRC_dat.2$Fertilizer=as.factor(WRC_dat.2$Fertilizer)
WRC_dat.2$Mowing=as.factor(WRC_dat.2$Mowing)
ggplot(WRC_dat.2,aes(x=Year,y=alpha,group=Ditch,colour=factor(Ditch)))+
stat_summary(fun.data=mean_cl_boot,size=1)+facet_wrap(~Fertilizer*Mowing,labeller = label_both)
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
Anova(m1,type="II")
alphae <- allEffects(m1)
alphae
alphae <- allEffects(m1)
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
alphae <- allEffects(m1)
alphae
plot(alphae)
summary(m1)
Anova(m1,type="II")
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
Anova(m1,type="II")
Ditch/
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|Ditch/BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|Ditch/BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
Anova(m1,type="II")
summary(m1)
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|Ditch:(BLOCK:QUADRAT..)), data=WRC_dat.2, family=gaussian(log))
m1
Anova(m1,type="II")
summary(m1)
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing)+Ditch+
(1|Ditch/BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
summary(m1)
m1=glmmTMB(alpha~(scale(Year)*Fertilizer*Mowing*Ditch)+
(1|Ditch/BLOCK/QUADRAT..), data=WRC_dat.2, family=gaussian(log))
Anova(m1,type="II")
alphae <- allEffects(m1)
alphae
plot(alphae)
pdf("../figures/All_Plant_Diversity_separate.pdf")
plot(alphae)
dev.off()
pdf("../figures/All_Plant_Diversity_separate.pdf")
plot(alphae)
dev.off()
pdf("../figures/All_Plant_Diversity_separate.pdf")
plot(alphae)
dev.off()
dev.new()
pdf("../figures/All_Plant_Diversity_separate.pdf")
plot(alphae)
graphics.off()
dev.new()
pdf("../figures/All_Plant_Diversity_separate.pdf")
plot(alphae)
graphics.off()
plot(alphae)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("plyr")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
library("tidyr")
library("ggpubr")
library("cowplot")
set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master.original)
Nmineralization_ng <- (master.original$Nmineralization)*1000
master <- cbind(master.original,Nmineralization_ng)
cor(master[,8:15])
#TOC-TN: 0.93450289 did not include TN in model selection
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
#NITRIFICATION
model1 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model2 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + TOC, data = master.MSM)
model3 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + CNratio, data = master.MSM)
model4 = lm(nitrification ~ pH + Moisture + ugNH4.gDM, data = master.MSM)
model5 = lm(nitrification ~ pH + Moisture, data = master.MSM)
model6 = lm(nitrification ~ Moisture + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model7 = lm(nitrification ~ Moisture + ugNH4.gDM + TOC, data = master.MSM)
model8 = lm(nitrification ~ Moisture + ugNH4.gDM + CNratio, data = master.MSM)
model9 = lm(nitrification ~ Moisture + ugNH4.gDM, data = master.MSM)
model10 = lm(nitrification ~ pH + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model11 = lm(nitrification ~ pH + ugNH4.gDM + TOC, data = master.MSM)
model12 = lm(nitrification ~ pH + ugNH4.gDM + CNratio, data = master.MSM)
model13 = lm(nitrification ~ pH + ugNH4.gDM, data = master.MSM)
model14 = lm(nitrification ~ pH + TOC + CNratio, data = master.MSM)
model15 = lm(nitrification ~ pH + TOC, data = master.MSM)
model16 = lm(nitrification ~ pH + CNratio, data = master.MSM)
model17 = lm(nitrification ~ ugNH4.gDM + TOC + CNratio, data = master.MSM)
model18 = lm(nitrification ~ ugNH4.gDM + TOC, data = master.MSM)
model19 = lm(nitrification ~ Moisture + TOC + CNratio, data = master.MSM)
model20 = lm(nitrification ~ Moisture + TOC, data = master.MSM)
model21 = lm(nitrification ~ Moisture + CNratio, data = master.MSM)
model22 = lm(nitrification ~ TOC, data = master.MSM)
model23 = lm(nitrification ~ pH, data = master.MSM)
model24 = lm(nitrification ~ Moisture, data = master.MSM)
model25 = lm(nitrification ~ ugNH4.gDM, data = master.MSM)
model26 = lm(nitrification ~ CNratio, data = master.MSM)
#summary(model_)
#Model comparison
Cand.models.nitrif.MSM <- list(model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17, model18, model19, model20, model21, model22, model23, model24, model25, model26)
Modnames <- c("model1","model2", "model3", "model4", "model5", "model6", "model7", "model8", "model9", "model10", "model11", "model12", "model13", "model14", "model15", "model16", "model17", "model18", "model19", "model20", "model21", "model22", "model23", "model24", "model25", "model26")
##compute table
print(aictab(cand.set = Cand.models.nitrif.MSM, modnames = Modnames, second.ord = TRUE), digits = 4)
#Ag
model1 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model2 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + TOC, data = master.Ag)
model3 = lm(nitrification ~ pH + Moisture + ugNH4.gDM + CNratio, data = master.Ag)
model4 = lm(nitrification ~ pH + Moisture + ugNH4.gDM, data = master.Ag)
model5 = lm(nitrification ~ pH + Moisture, data = master.Ag)
model6 = lm(nitrification ~ Moisture + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model7 = lm(nitrification ~ Moisture + ugNH4.gDM + TOC, data = master.Ag)
model8 = lm(nitrification ~ Moisture + ugNH4.gDM + CNratio, data = master.Ag)
model9 = lm(nitrification ~ Moisture + ugNH4.gDM, data = master.Ag)
model10 = lm(nitrification ~ pH + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model11 = lm(nitrification ~ pH + ugNH4.gDM + TOC, data = master.Ag)
model12 = lm(nitrification ~ pH + ugNH4.gDM + CNratio, data = master.Ag)
model13 = lm(nitrification ~ pH + ugNH4.gDM, data = master.Ag)
model14 = lm(nitrification ~ pH + TOC + CNratio, data = master.Ag)
model15 = lm(nitrification ~ pH + TOC, data = master.Ag)
model16 = lm(nitrification ~ pH + CNratio, data = master.Ag)
model17 = lm(nitrification ~ ugNH4.gDM + TOC + CNratio, data = master.Ag)
model18 = lm(nitrification ~ ugNH4.gDM + TOC, data = master.Ag)
model19 = lm(nitrification ~ Moisture + TOC + CNratio, data = master.Ag)
model20 = lm(nitrification ~ Moisture + TOC, data = master.Ag)
model21 = lm(nitrification ~ Moisture + CNratio, data = master.Ag)
model22 = lm(nitrification ~ TOC, data = master.Ag)
model23 = lm(nitrification ~ pH, data = master.Ag)
model24 = lm(nitrification ~ Moisture, data = master.Ag)
model25 = lm(nitrification ~ ugNH4.gDM, data = master.Ag)
model26 = lm(nitrification ~ CNratio, data = master.Ag)
#Model comparison
Cand.models.nitrif.Ag <- list(model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17, model18, model19, model20, model21, model22, model23, model24, model25, model26)
Modnames <- c("model1","model2", "model3", "model4", "model5", "model6", "model7", "model8", "model9", "model10", "model11", "model12", "model13", "model14", "model15", "model16", "model17", "model18", "model19", "model20", "model21", "model22", "model23", "model24", "model25", "model26")
##compute table
print(aictab(cand.set = Cand.models.nitrif.Ag, modnames = Modnames, second.ord = TRUE), digits = 4)
library("lmerTest")
library("pbkrtest")
#nitrif.lm <- lmer(nitrification ~ Site*Hydrology + (1|Month), data = master) #hydrology NS
nitrif.lm <- lmer(nitrification ~ Site + (1|Month), data = master)
plot(nitrif.lm)
summary(nitrif.lm, ddf="Kenward-Roger")
cor(master[,8:15])
