m.lst
# Compare slopes
pairs(m.lst)
## N MINERALIZATION - AG
ag.Nmin.slopes <- lm(Nmineralization_ng ~ Moisture*Month, data = master.Ag)
anova(Nmin.slopes)
# Obtain slopes
Nmin.slopes$coefficients
m.lst <- lstrends(Nmin.slopes, "Month", var="Moisture")
m.lst
# Compare slopes
pairs(m.lst)
#NMineralization
model1 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model2 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + TOC, data = master.MSM)
model3 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + CNratio, data = master.MSM)
model4 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM, data = master.MSM)
model5 = lm(Nmineralization_ng ~ pH + Moisture, data = master.MSM)
model6 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model7 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + TOC, data = master.MSM)
model8 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + CNratio, data = master.MSM)
model9 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM, data = master.MSM)
model10 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + TOC + CNratio, data = master.MSM)
model11 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + TOC, data = master.MSM)
model12 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + CNratio, data = master.MSM)
model13 = lm(Nmineralization_ng ~ pH + ugNH4.gDM, data = master.MSM)
model14 = lm(Nmineralization_ng ~ pH + TOC + CNratio, data = master.MSM)
model15 = lm(Nmineralization_ng ~ pH + TOC, data = master.MSM)
model16 = lm(Nmineralization_ng ~ pH + CNratio, data = master.MSM)
model17 = lm(Nmineralization_ng ~ ugNH4.gDM + TOC + CNratio, data = master.MSM)
model18 = lm(Nmineralization_ng ~ ugNH4.gDM + TOC, data = master.MSM)
model19 = lm(Nmineralization_ng ~ Moisture + TOC + CNratio, data = master.MSM)
model20 = lm(Nmineralization_ng ~ Moisture + TOC, data = master.MSM)
model21 = lm(Nmineralization_ng ~ Moisture + CNratio, data = master.MSM)
model22 = lm(Nmineralization_ng ~ TOC, data = master.MSM)
model23 = lm(Nmineralization_ng ~ pH, data = master.MSM)
model24 = lm(Nmineralization_ng ~ Moisture, data = master.MSM)
model25 = lm(Nmineralization_ng ~ ugNH4.gDM, data = master.MSM)
model26 = lm(Nmineralization_ng ~ CNratio, data = master.MSM)
#Model comparison
Cand.models.Nmin.MSM <- list(model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17, model18, model19, model20, model21, model22, model23, model24, model25, model26)
Modnames <- c("model1","model2", "model3", "model4", "model5", "model6", "model7", "model8", "model9", "model10", "model11", "model12", "model13", "model14", "model15", "model16", "model17", "model18", "model19", "model20", "model21", "model22", "model23", "model24", "model25", "model26")
##compute table
print(aictab(cand.set = Cand.models.Nmin.MSM, modnames = Modnames, second.ord = TRUE), digits = 4)
#Ag
model1 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model2 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + TOC, data = master.Ag)
model3 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM + CNratio, data = master.Ag)
model4 = lm(Nmineralization_ng ~ pH + Moisture + ugNH4.gDM, data = master.Ag)
model5 = lm(Nmineralization_ng ~ pH + Moisture, data = master.Ag)
model6 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model7 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + TOC, data = master.Ag)
model8 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM + CNratio, data = master.Ag)
model9 = lm(Nmineralization_ng ~ Moisture + ugNH4.gDM, data = master.Ag)
model10 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + TOC + CNratio, data = master.Ag)
model11 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + TOC, data = master.Ag)
model12 = lm(Nmineralization_ng ~ pH + ugNH4.gDM + CNratio, data = master.Ag)
model13 = lm(Nmineralization_ng ~ pH + ugNH4.gDM, data = master.Ag)
model14 = lm(Nmineralization_ng ~ pH + TOC + CNratio, data = master.Ag)
model15 = lm(Nmineralization_ng ~ pH + TOC, data = master.Ag)
model16 = lm(Nmineralization_ng ~ pH + CNratio, data = master.Ag)
model17 = lm(Nmineralization_ng ~ ugNH4.gDM + TOC + CNratio, data = master.Ag)
model18 = lm(Nmineralization_ng ~ ugNH4.gDM + TOC, data = master.Ag)
model19 = lm(Nmineralization_ng ~ Moisture + TOC + CNratio, data = master.Ag)
model20 = lm(Nmineralization_ng ~ Moisture + TOC, data = master.Ag)
model21 = lm(Nmineralization_ng ~ Moisture + CNratio, data = master.Ag)
model22 = lm(Nmineralization_ng ~ TOC, data = master.Ag)
model23 = lm(Nmineralization_ng ~ pH, data = master.Ag)
model24 = lm(Nmineralization_ng ~ Moisture, data = master.Ag)
model25 = lm(Nmineralization_ng ~ ugNH4.gDM, data = master.Ag)
model26 = lm(Nmineralization_ng ~ CNratio, data = master.Ag)
#Model comparison
Cand.models.Nmin.Ag<- list(model1, model2, model3, model4, model5, model6, model7, model8, model9, model10, model11, model12, model13, model14, model15, model16, model17, model18, model19, model20, model21, model22, model23, model24, model25, model26)
Modnames <- c("model1","model2", "model3", "model4", "model5", "model6", "model7", "model8", "model9", "model10", "model11", "model12", "model13", "model14", "model15", "model16", "model17", "model18", "model19", "model20", "model21", "model22", "model23", "model24", "model25", "model26")
##compute table
print(aictab(cand.set = Cand.models.Nmin.Ag, modnames = Modnames, second.ord = TRUE), digits = 4)
p <- ggplot(master, aes(x=Moisture, y=Nmineralization_ng, shape=as.factor(Month), color=as.factor(Site)))+scale_shape_manual(name="Month", values=c(15,16,17), labels=c("July","September","December"))+scale_color_manual(name="Site", values=c("darkgreen","cyan"), labels = c("Ag", "MSM")) +  geom_point(size=4) + scale_x_continuous(limits=c(0,60))+scale_y_continuous(
labels = scales::number_format(accuracy = 0.1))
p1=p+geom_smooth(method="lm")
Nmin <- p1 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +theme(axis.title=element_text(vjust=1,size=18), axis.text=element_text(size=18), axis.text.x = element_text(vjust=0.65, hjust=0.5, size=18), panel.border = element_rect(colour = "black",size=1)) + theme(axis.ticks.length=unit(0.3,"cm")) + labs(x = "Percent Moisture", y=expression(paste("Nitrogen Mineralization (ng ",NH[4]^{'+'},'-N ',g^{-1},' soil)'))) + theme(strip.text.x = element_text(size=18, face="bold"), strip.text.y = element_text(size=18, face="bold"), strip.background = element_rect(colour="black", fill="white", size=1))
ggsave("../figures/Nmineralization.pdf", plot=last_plot(), device=NULL, path=NULL, scale=1, width=6.26, height=4.43, dpi=300, limitsize=TRUE)
ggsave("../figures/Nmineralization.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=6.26, height=4.43, dpi=300, limitsize=TRUE)
##compute table
print(aictab(cand.set = Cand.models.Nmin.MSM, modnames = Modnames, second.ord = TRUE), digits = 4)
##compute table
print(aictab(cand.set = Cand.models.Nmin.Ag, modnames = Modnames, second.ord = TRUE), digits = 4)
nitrif.lm <- lmer(nitrification ~ Site + (1|Month), data = master)
plot(nitrif.lm)
nitrif.lm
anova(nitrif.lm)
denitrif.lm <- lmer(denitrification ~ Site + (1|Month), data = master)
plot(denitrif.lm)
denitrif.lm
anova(denitrif.lm)
summary(denitrif.lm)
confit(denitrif.lm)
confint(denitrif.lm)
#Rainclouds for repeated measures, additional plotting options
group <- as.factor(master$Site)
View(master)
time <- as.factor(master$Month)
warnings()
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=0)
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=TRUE)
View(master.original)
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=1)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=1)
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=0)
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=NA)
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv", row.names=NULL)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master.original)
Nmineralization_ng <- (master.original$Nmineralization)*1000
master <- cbind(master.original,Nmineralization_ng)
cor(master[,7:14])
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
#Rainclouds for repeated measures, additional plotting options
group <- as.factor(master$Site)
time <- as.factor(master$Month)
p1 <- ggplot(master, aes(x = Month, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .
1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group
),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape
= NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score
_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = scor
e_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = s
core_mean, group = group, colour = group, ymin = score_mean-se, ymax
= score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
#ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#ggsave('11repanvplot2.png', width = w, height = h)
#coord_flip()+
p1
p1 <- ggplot(master, aes(x = Month, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
#ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#ggsave('11repanvplot2.png', width = w, height = h)
#coord_flip()+
p1
#Rainclouds for repeated measures, additional plotting options
library(cowplot)
library(readr)
p1 <- ggplot(master, aes(x = Month, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
#ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#ggsave('11repanvplot2.png', width = w, height = h)
#coord_flip()+
p1
?geom_flat_violin
p1 <- ggplot(master, aes(x = Month, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18)
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
install.packages(c("agricolae", "AICcmodavg", "ape", "assertthat", "backports", "boot", "broom", "callr", "car", "caTools", "checkmate", "classInt", "cli", "clipr", "cluster", "colorspace", "data.table", "dbplyr", "devtools", "digest", "dplyr", "e1071", "effects", "evaluate", "expm", "forcats", "fs", "ggplot2", "ggrepel", "ggsignif", "git2r", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "labelled", "lazyeval", "lme4", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "openxlsx", "permute", "picante", "pillar", "pkgbuild", "polynom", "processx", "progress", "purrr", "R6", "raster", "rcmdcheck", "Rcmdr", "Rcpp", "RcppArmadillo", "readxl", "remotes", "reprex", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "shiny", "spdep", "stringi", "survey", "survival", "sys", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vegan", "VGAM", "xfun", "xtable", "zip", "zoo"))
rm(list=ls())
setwd("~/GitHub/WRC18_RhizoTeaDecomp/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan")
require("nlme")
require("reshape")
require("ggplot2")
require("ade4")
require("png")
require ("agricolae")
require("tidyr")
require("dplyr")
require("reshape2")
require("picante")
# Import Environmental Data
design <- read.csv("../data/2018_WRC_SoilMicroDecomp_missing3t.csv", row.names=1)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master.original)
Nmineralization_ng <- (master.original$Nmineralization)*1000
master <- cbind(master.original,Nmineralization_ng)
cor(master[,7:14])
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
#Rainclouds for repeated measures, additional plotting options
library(cowplot)
library(readr)
group <- as.factor(master$Site)
time <- as.factor(master$Month)
p1 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape= NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
#ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#ggsave('11repanvplot2.png', width = w, height = h)
#coord_flip()+
p1
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group))
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) +
geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)
#Rainclouds for repeated measures, additional plotting options
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")`
#Rainclouds for repeated measures, additional plotting options
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)
#Rainclouds for repeated measures, additional plotting options
source("R_rainclouds.R")
#Rainclouds for repeated measures, additional plotting options
source("../source/R_rainclouds.R")
#Rainclouds for repeated measures, additional plotting options
source("../bin/R_rainclouds.R")
source("../binsummarySE.R")
#Rainclouds for repeated measures, additional plotting options
source("../bin/R_rainclouds.R")
source("../bin/summarySE.R")
source("../bin/simulateData.R")
library(cowplot)
group <- as.factor(master$Site)
time <- as.factor(master$Month)
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = sumrepdat, aes(x = as.numeric(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)+
scale_colour_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Dark2")+
ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)+
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = score, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = score_mean, group = group, colour = group, ymin = score_mean-se, ymax = score_mean+se), width = .05)
p11
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.numeric(time)-.15, y = score, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.numeric(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = denitrification, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group, ymin = denitrification_mean-se, ymax = denitrification_mean+se), width = .05)+
#scale_colour_brewer(palette = "Dark2")+
#scale_fill_brewer(palette = "Dark2")+
# ggtitle("Figure 11: Repeated Measures - Factorial (Extended)")
#ggsave('../figs/tutorial_R/11repanvplot2.png', width = w, height = h)
library(lmerTest)
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.numeric(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = denitrification, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group, ymin = denitrification_mean-se, ymax = denitrification_mean+se), width = .05) #+
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = denitrification, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group, ymin = denitrification_mean-se, ymax = denitrification_mean+se), width = .05) #+
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
library(tidyr)
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
library("tidyr")
require("dplyr")
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
p11
View(master)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
library("tidyr")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master.original)
Nmineralization_ng <- (master.original$Nmineralization)*1000
master <- cbind(master.original,Nmineralization_ng)
cor(master[,7:14])
#TOC-TN: 0.93450289 did not include TN in model selection
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
#Rainclouds for repeated measures, additional plotting options
source("../bin/R_rainclouds.R")
source("../bin/summarySE.R")
source("../bin/simulateData.R")
library(cowplot)
group <- as.factor(master$Site)
#Rainclouds for repeated measures, additional plotting options
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)+
geom_boxplot(aes(x = time, y = denitrification, fill = group),outlier.shape = NA, alpha = .5, width = .1, colour = "black")+
geom_line(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), linetype = 3)+
geom_point(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group), shape = 18) +
geom_errorbar(data = master, aes(x = as.factor(time)+.1, y = denitrification_mean, group = group, colour = group, ymin = denitrification_mean-se, ymax = denitrification_mean+se), width = .05) #+
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA)
p11
library("tidyr")
require("dplyr")
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.factor(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
p11 <- ggplot(master, aes(x = time, y = denitrification, fill = group)) + geom_flat_violin(aes(fill = group),position = position_nudge(x = .1, y = 0), adjust = 1.5, trim = FALSE, alpha = .5, colour = NA) +
geom_point(aes(x = as.numeric(time)-.15, y = denitrification, colour = group),position = position_jitter(width = .05), size = .25, shape = 20)
p11
p11
?group_by
library(dplyr)
install.packages("rlang")
# Load packages ----
library(ggplot2)
library(dplyr)
library(rlang)
#PC - set WD manually by Session -> Set Working Directory -> Choose Directory...
if(Sys.info()[1] == "Darwin"){
setwd("~/GitHub/Mattamuskeet_Hydrology/analyses/")
} else {
setwd(choose.dir())
}
rm(list = ls())
#load req'd packages
require("vegan")
require("dplyr")
require("nlme")
require("lme4")
require("reshape2")
require("ggplot2")
require("ade4")
require("knitr")
library("AICcmodavg")
library("scales")
library("tidyr")
# set std err
se <- function(x, ...) {
sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))
}
ci <- function(x, ...) {
1.96 * sd(x, na.rm = TRUE)
}
# load data file
master.original <- read.csv("../data/2017_Mattamuskeet_SoilBiogeo.csv")
dim(master.original)
Nmineralization_ng <- (master.original$Nmineralization)*1000
master <- cbind(master.original,Nmineralization_ng)
cor(master[,7:14])
#TOC-TN: 0.93450289 did not include TN in model selection
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
cor(master[,8:15])
master.MSM <- subset(master, Site == "MSM")
master.Ag <- subset(master, Site == "Ag")
#Rainclouds for repeated measures, additional plotting options
source("../bin/R_rainclouds.R")
